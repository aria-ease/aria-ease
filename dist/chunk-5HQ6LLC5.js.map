{"version":3,"sources":["/Users/macx/aria-ease/package/dist/chunk-5HQ6LLC5.js","../src/radio/src/updateRadioAriaAttributes/updateRadioAriaAttributes.ts"],"names":["updateRadioAriaAttributes","radioId","radiosClass","radioStates","currentPressedRadioIndex","radioDiv","document","querySelector","Error","radioItems","Array","from","querySelectorAll","length","forEach","radioItem","index","state","checked","getAttribute","shouldBeChecked","setAttribute"],"mappings":"AAAA,uEAAuE;ACUhE,SAASA,0BAA0BC,OAAA,EAAiBC,WAAA,EAAqBC,WAAA,EAA4BC,wBAAA;QAClGC,WAA+BC,SAASC,aAAA,CAAc,IAAIN,MAAO,CAAA,MAAPA,CAAAA;UAChE,CAAA,CAAA,CAAA,CAAI,CAACI,IAAAA,EAAAA,EAAAA,EAAU;oBACX,EAAA,EAAA,EAAM,EAAA,EAAIG,EAAAA,IAAM;UACpB;QAEMC,aAA4BC,MAAMC,IAAA,CAAKN,SAASO,gBAAA,CAAiB,IAAIV,EAAW,KAAA,EAAXA,KAAAA;UAC3E,EAAA,EAAGO,KAAAA,EAAAA,EAAAA,EAAWI,EAAAA,EAAAA,CAAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAW,CAAA,EAAG;oBAC1B,EAAA,EAAA,EAAM,EAAA,EAAIL,EAAAA,IAAM;UAClB;UAEAC,KAAAA,EAAAA,EAAAA,EAAWK,CAAAA,CAAAA,SAAAA,CAAAA,SAAAA,CAAAA,SAAA,CAAQ,SAACC,CAAAA,UAAwBC;gBACxC,EAAMC,EAAAA,EAAAA,EAAAA,EAAQd,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAA,CAAYa,EAAAA,EAAAA,EAAK;gBAC/B,EAAME,IAAAA,EAAAA,EAAAA,EAAUH,IAAAA,EAAAA,EAAAA,EAAUI,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAA,CAAa;gBACvC,EAAMC,YAAAA,EAAAA,EAAAA,EAAkBJ,IAAAA,EAAAA,EAAAA,EAAUZ,qBAAAA,EAAAA,EAAAA,EAA4Ba,EAAAA,EAAAA,EAAMC,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAA,CAAA,EAAU,GAAA,EAAA,EAAA,EAAS,IAAA,EAAA,EAAA,EAAW;oBAClG,GAAA,CAAIA,GAAAA,IAAAA,IAAWA,IAAAA,IAAAA,IAAYE,KAAAA,IAAAA,IAAAA,IAAiB;8BACxCL,IAAAA,CAAAA,KAAUM,CAAAA,KAAAA,CAAAA,IAAAA,CAAA,CAAa,IAAA,MAAA,MAAgBD;oBAC3C;UACJ;AACJ","sourcesContent":["// src/radio/src/updateRadioAriaAttributes/updateRadioAriaAttributes.ts\nfunction updateRadioAriaAttributes(radioId, radiosClass, radioStates, currentPressedRadioIndex) {\n  const radioDiv = document.querySelector(`#${radioId}`);\n  if (!radioDiv) {\n    throw new Error(\"Invalid radio main div id provided.\");\n  }\n  const radioItems = Array.from(radioDiv.querySelectorAll(`.${radiosClass}`));\n  if (radioItems.length === 0) {\n    throw new Error(\"Invalid radios shared class provided.\");\n  }\n  radioItems.forEach((radioItem, index) => {\n    const state = radioStates[index];\n    const checked = radioItem.getAttribute(\"aria-checked\");\n    const shouldBeChecked = index === currentPressedRadioIndex ? state.checked ? \"true\" : \"false\" : \"false\";\n    if (checked && checked !== shouldBeChecked) {\n      radioItem.setAttribute(\"aria-checked\", shouldBeChecked);\n    }\n  });\n}\n\nexport { updateRadioAriaAttributes };\n//# sourceMappingURL=chunk-5HQ6LLC5.js.map\n","/**\n * Adds screen reader accessibility to multiple radio buttons. Updates the aria attributes of the radio buttons. Radio elements must possess the following aria attributes; aria-checked and aria-label.\n * @param {string} radioId The id of the radio parent container.\n * @param {string} radiosClass The shared class of all the radios.\n * @param {RadioStates[]} radioStates Array of objects containing radio buttons state information.\n * @param {number} currentPressedRadioIndex Index of the currently checked or unchecked radio button.\n */\n\nimport { HTMLElement, RadioStates } from \"../../../../Types\";\n\nexport function updateRadioAriaAttributes(radioId: string, radiosClass: string, radioStates: RadioStates[], currentPressedRadioIndex: number): void {\n    const radioDiv: HTMLElement | null = document.querySelector(`#${radioId}`);\n    if (!radioDiv) {\n        throw new Error(\"Invalid radio main div id provided.\");\n    }\n    \n    const radioItems: HTMLElement[] = Array.from(radioDiv.querySelectorAll(`.${radiosClass}`));\n    if(radioItems.length === 0) {\n      throw new Error('Invalid radios shared class provided.');\n    }\n\n    radioItems.forEach((radioItem: HTMLElement, index: number) => {\n        const state = radioStates[index];\n        const checked = radioItem.getAttribute(\"aria-checked\");\n        const shouldBeChecked = index === currentPressedRadioIndex ? (state.checked ? \"true\" : \"false\") : \"false\";\n        if (checked && checked !== shouldBeChecked) {\n            radioItem.setAttribute(\"aria-checked\", shouldBeChecked);\n        }\n    });\n}"]}