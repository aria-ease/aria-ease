{"version":3,"sources":["/Users/macx/aria-ease/package/dist/src/menu/index.cjs","../../../src/utils/handleKeyPress/handleKeyPress.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\n// src/utils/handleKeyPress/handleKeyPress.ts\nfunction isTextInput(el) {\n  if (el.tagName !== \"INPUT\") return false;\n  const type = el.type;\n  return [\"text\", \"email\", \"password\", \"tel\", \"number\"].includes(type);\n}\nfunction isTextArea(el) {\n  return el.tagName === \"TEXTAREA\";\n}\nfunction isNativeButton(el) {\n  return el.tagName === \"BUTTON\" || el.tagName === \"INPUT\" && [\"button\", \"submit\", \"reset\"].includes(el.type);\n}\nfunction isLink(el) {\n  return el.tagName === \"A\";\n}\nfunction moveFocus(elementItems, currentIndex, direction) {\n  const len = elementItems.length;\n  const nextIndex = (currentIndex + direction + len) % len;\n  elementItems.item(nextIndex).focus();\n}\nfunction isClickableButNotSemantic(el) {\n  return el.getAttribute(\"data-custom-click\") !== null || el.getAttribute(\"data-custom-click\") !== void 0;\n}\nfunction handleMenuEscapeKeyPress(menuElement, menuTriggerButton) {\n  menuElement.style.display = \"none\";\n  const menuTriggerButtonId = menuTriggerButton.getAttribute(\"id\");\n  if (!menuTriggerButtonId) {\n    throw new Error(\"Menu trigger button does not have id attribute\");\n  }\n  menuTriggerButton.setAttribute(\"aria-expanded\", \"false\");\n}\nfunction handleKeyPress(event, elementItems, elementItemIndex, menuElementDiv, triggerButton) {\n  const currentEl = elementItems.item(elementItemIndex);\n  switch (event.key) {\n    case \"ArrowUp\":\n    case \"ArrowLeft\": {\n      if (!isTextInput(currentEl) && !isTextArea(currentEl)) {\n        event.preventDefault();\n        moveFocus(elementItems, elementItemIndex, -1);\n      } else if (isTextInput(currentEl) || isTextArea(currentEl)) {\n        const cursorStart = currentEl.selectionStart;\n        if (cursorStart === 0) {\n          event.preventDefault();\n          moveFocus(elementItems, elementItemIndex, -1);\n        }\n      }\n      break;\n    }\n    case \"ArrowDown\":\n    case \"ArrowRight\": {\n      if (!isTextInput(currentEl) && !isTextArea(currentEl)) {\n        event.preventDefault();\n        moveFocus(elementItems, elementItemIndex, 1);\n      } else if (isTextInput(currentEl) || isTextArea(currentEl)) {\n        const value = currentEl.value;\n        const cursorEnd = currentEl.selectionStart;\n        if (cursorEnd === value.length) {\n          event.preventDefault();\n          moveFocus(elementItems, elementItemIndex, 1);\n        }\n      }\n      break;\n    }\n    case \"Escape\": {\n      event.preventDefault();\n      if (menuElementDiv && triggerButton) {\n        if (getComputedStyle(menuElementDiv).display === \"block\") {\n          handleMenuEscapeKeyPress(menuElementDiv, triggerButton);\n        }\n        triggerButton.focus();\n      }\n      break;\n    }\n    case \"Enter\":\n    case \" \": {\n      if (!isNativeButton(currentEl) && !isLink(currentEl) && isClickableButNotSemantic(currentEl)) {\n        event.preventDefault();\n        currentEl.click();\n      }\n      break;\n    }\n  }\n}\n\n// src/menu/src/makeMenuAccessible/makeMenuAccessible.ts\nfunction makeMenuAccessible({ menuId, menuElementsClass, triggerId }) {\n  const menuDiv = document.querySelector(`#${menuId}`);\n  if (!menuDiv) throw new Error(\"Invalid menu div id provided\");\n  const triggerButton = document.querySelector(`#${triggerId}`);\n  if (!triggerButton) throw new Error(\"Invalid trigger button id provided\");\n  const handlerMap = /* @__PURE__ */ new Map();\n  function setAria(isOpen) {\n    triggerButton.setAttribute(\"aria-expanded\", isOpen ? \"true\" : \"false\");\n  }\n  function addListeners() {\n    const menuItems = menuDiv.querySelectorAll(`.${menuElementsClass}`);\n    menuItems.forEach((menuItem, index) => {\n      if (!handlerMap.has(menuItem)) {\n        const handler = (event) => handleKeyPress(event, menuItems, index, menuDiv, triggerButton);\n        menuItem.addEventListener(\"keydown\", handler);\n        handlerMap.set(menuItem, handler);\n      }\n    });\n  }\n  function removeListeners() {\n    const menuItems = menuDiv.querySelectorAll(`.${menuElementsClass}`);\n    menuItems.forEach((menuItem) => {\n      const handler = handlerMap.get(menuItem);\n      if (handler) {\n        menuItem.removeEventListener(\"keydown\", handler);\n        handlerMap.delete(menuItem);\n      }\n    });\n  }\n  function openMenu() {\n    menuDiv.style.display = \"block\";\n    setAria(true);\n    addListeners();\n    const menuItems = menuDiv.querySelectorAll(`.${menuElementsClass}`);\n    if (menuItems.length > 0) menuItems[0].focus();\n  }\n  function closeMenu() {\n    removeListeners();\n    menuDiv.style.display = \"none\";\n    setAria(false);\n    triggerButton.focus();\n  }\n  function cleanup() {\n    removeListeners();\n  }\n  return { openMenu, closeMenu, cleanup };\n}\n\nexports.makeMenuAccessible = makeMenuAccessible;\n//# sourceMappingURL=index.cjs.map\n","import { NodeListOfHTMLElement, HTMLElement } from \"../../../Types\";\n\n\nfunction isTextInput(el: HTMLElement): boolean {\n    if (el.tagName !== 'INPUT') return false;\n    const type = (el as HTMLInputElement).type;\n    return ['text', 'email', 'password', 'tel', 'number'].includes(type);\n}\n\nfunction isTextArea(el: HTMLElement): boolean {\n    return el.tagName === 'TEXTAREA';\n}\n\nexport function isNativeButton(el: HTMLElement): boolean {\n    return el.tagName === 'BUTTON' || (el.tagName === 'INPUT' && ['button', 'submit', 'reset'].includes((el as HTMLInputElement).type));\n}\n\nexport function isLink(el: HTMLElement): boolean {\n    return el.tagName === 'A';\n}\n\nfunction moveFocus(elementItems: NodeListOfHTMLElement, currentIndex: number, direction: -1 | 1) {\n    const len = elementItems.length;\n    const nextIndex = (currentIndex + direction + len) % len;\n    elementItems.item(nextIndex).focus();\n}\n\nfunction isClickableButNotSemantic(el: HTMLElement): boolean {\n    return el.getAttribute(\"data-custom-click\") !== null || el.getAttribute(\"data-custom-click\") !== undefined;\n}\n\nfunction handleMenuEscapeKeyPress(menuElement: HTMLElement, menuTriggerButton: HTMLElement) {\n    menuElement.style.display = 'none';\n    const menuTriggerButtonId = menuTriggerButton.getAttribute('id');\n    if (!menuTriggerButtonId) {\n        throw new Error(\"Menu trigger button does not have id attribute\");\n    }\n    menuTriggerButton.setAttribute(\"aria-expanded\", \"false\");\n}\n\nexport function handleKeyPress(\n    event: KeyboardEvent,\n    elementItems: NodeListOfHTMLElement,\n    elementItemIndex: number,\n    menuElementDiv?: HTMLElement,\n    triggerButton?: HTMLElement\n): void {\n    const currentEl = elementItems.item(elementItemIndex);\n    switch (event.key) {\n        case 'ArrowUp':\n        case 'ArrowLeft': {\n            if (!isTextInput(currentEl) && !isTextArea(currentEl)) {\n                event.preventDefault();\n                moveFocus(elementItems, elementItemIndex, -1);\n            } else if (isTextInput(currentEl) || isTextArea(currentEl)) {\n                const cursorStart = (currentEl as HTMLInputElement | HTMLTextAreaElement).selectionStart;\n                if (cursorStart === 0) {\n                    event.preventDefault();\n                    moveFocus(elementItems, elementItemIndex, -1);\n                }\n            }\n            break;\n        }\n        case 'ArrowDown':\n        case 'ArrowRight': {\n            if (!isTextInput(currentEl) && !isTextArea(currentEl)) {\n                event.preventDefault();\n                moveFocus(elementItems, elementItemIndex, 1);\n            } else if (isTextInput(currentEl) || isTextArea(currentEl)) {\n                const value = (currentEl as HTMLInputElement | HTMLTextAreaElement).value;\n                const cursorEnd = (currentEl as HTMLInputElement | HTMLTextAreaElement).selectionStart;\n                if (cursorEnd === value.length) {\n                    event.preventDefault();\n                    moveFocus(elementItems, elementItemIndex, 1);\n                }\n            }\n            break;\n        }\n        case 'Escape': {\n            event.preventDefault();\n            if (menuElementDiv && triggerButton) {\n                if (getComputedStyle(menuElementDiv).display === 'block') {\n                    handleMenuEscapeKeyPress(menuElementDiv, triggerButton);\n                }\n                triggerButton.focus();\n            }\n            break;\n        }\n        case 'Enter':\n        case ' ': {\n            if (!isNativeButton(currentEl) && !isLink(currentEl) && isClickableButNotSemantic(currentEl)) {\n                event.preventDefault();\n                currentEl.click();\n            }\n            break;\n        }\n        default:\n            break;\n    }\n}"]}