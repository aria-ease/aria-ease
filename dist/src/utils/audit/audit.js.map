{"version":3,"sources":["/Users/macx/aria-ease/package/dist/src/utils/audit/audit.js","../../../../src/utils/audit/audit.ts"],"names":[],"mappings":"","sourcesContent":["import AxeBuilder from '@axe-core/playwright';\nimport { chromium } from 'playwright';\n\n// src/utils/audit/audit.ts\nasync function runAudit() {\n  const browser = await chromium.launch({ headless: true });\n  const context = await browser.newContext();\n  const page = await context.newPage();\n  await page.goto(\"http://localhost:5173/\");\n  try {\n    const axe = new AxeBuilder({ page });\n    const axeResults = await axe.analyze();\n    console.log(\"--- AXE-CORE RESULTS ---\");\n    console.log(axeResults);\n    const snapshot = await page.accessibility.snapshot();\n    console.log(\"\\n--- PLAYWRIGHT SNAPSHOT ---\");\n    console.log(snapshot);\n  } catch (error) {\n    console.log(error);\n  }\n  await browser.close();\n}\n\nexport { runAudit };\n//# sourceMappingURL=audit.js.map\n","import AxeBuilder from \"@axe-core/playwright\";\nimport { chromium } from \"playwright\";\nimport { AxeResults } from \"Types\";\n\nexport async function runAudit(url: string) {\n    const browser = await chromium.launch({ headless: true });\n    const context = await browser.newContext();\n    const page = await context.newPage();\n    await page.goto(url, { waitUntil: 'networkidle' });\n\n    try{\n        const axe = new AxeBuilder({ page });\n\n        const axeResults: AxeResults = await axe.analyze();\n        //console.log(\"--- AXE-CORE VIOLATIONS RESULTS ---\");\n        //const violations = axeResults.violations.filter(v => v.nodes.length > 0);\n        /* console.log(JSON.stringify(violations, null, 2));\n\n\n        console.log(\"--- EACH AXE-CORE VIOLATION ---\");\n\n        violations.forEach(v => {\n            console.log(`\\nRule: ${v.id}`);\n            console.log(`Impact: ${v.impact}`);\n            console.log(`Description: ${v.description}`);\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            v.nodes.forEach((n: any) => {\n                console.log(`  â†’ Target: ${n.target}`);\n                console.log(`    Failure: ${n.failureSummary}`);\n            });\n        });\n\n\n        const snapshot = await page.accessibility.snapshot();\n        console.log(\"\\n--- PLAYWRIGHT SNAPSHOT ---\");\n        console.log(snapshot); */\n\n\n        return axeResults;\n    } catch(error) {\n        console.log(error);\n    }\n    \n    await browser.close(); \n}"]}