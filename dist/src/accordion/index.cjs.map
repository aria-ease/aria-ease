{"version":3,"sources":["/Users/macx/aria-ease/package/dist/src/accordion/index.cjs"],"names":[],"mappings":"AAAA","sourcesContent":["'use strict';\n\n// src/accordion/src/updateAccordionTriggerAriaAttributes/updateAccordionTriggerAriaAttributes.ts\nfunction updateAccordionTriggerAriaAttributes(accordionId, accordionTriggersClass, accordionStates, clickedTriggerIndex) {\n  const accordionDiv = document.querySelector(`#${accordionId}`);\n  if (!accordionDiv) {\n    throw new Error(\"Invalid accordion main div id provided.\");\n  }\n  const accordionItems = Array.from(accordionDiv.querySelectorAll(`.${accordionTriggersClass}`));\n  if (accordionItems.length === 0) {\n    throw new Error(\"Invalid accordion items shared class provided.\");\n  }\n  if (accordionItems.length !== accordionStates.length) {\n    throw new Error(`Accordion state/DOM length mismatch: found ${accordionItems.length} triggers, but got ${accordionStates.length} state objects.`);\n  }\n  accordionItems.forEach((accordionItem, index) => {\n    const state = accordionStates[index];\n    const expanded = accordionItem.getAttribute(\"aria-expanded\");\n    const shouldBeExpanded = index === clickedTriggerIndex ? state.display ? \"true\" : \"false\" : \"false\";\n    if (expanded && expanded !== shouldBeExpanded) {\n      accordionItem.setAttribute(\"aria-expanded\", shouldBeExpanded);\n    }\n  });\n}\n\nexports.updateAccordionTriggerAriaAttributes = updateAccordionTriggerAriaAttributes;\n//# sourceMappingURL=index.cjs.map\n"]}