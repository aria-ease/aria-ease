{"version":3,"sources":["/Users/macx/aria-ease/package/dist/index.js","../src/accordion/index.ts","../src/block/index.ts","../src/checkbox/index.ts","../src/checkbox/src/single-checkbox/updateSingleCheckboxAriaAttributes/updateSingleCheckboxAriaAttributes.ts","../src/checkbox/src/group-checkbox/updateGroupCheckboxesAriaAttributes/updateGroupCheckboxesAriaAttributes.ts","../src/menu/index.ts"],"names":["accordion_exports","__export","updateAccordionTriggerAriaAttributes","block_exports","makeBlockAccessible","updateGroupCheckboxesAriaAttributes","updateSingleCheckboxAriaAttributes","cleanUpMenuEventListeners"],"mappings":"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","sourcesContent":["'use strict';\n\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/accordion/index.ts\nvar accordion_exports = {};\n__export(accordion_exports, {\n  updateAccordionTriggerAriaAttributes: () => updateAccordionTriggerAriaAttributes\n});\n\n// src/accordion/src/updateAccordionTriggerAriaAttributes/updateAccordionTriggerAriaAttributes.ts\nfunction updateAccordionTriggerAriaAttributes(accordionStates, accordionsClass, currentClickedTriggerIndex) {\n  console.log(\"Accordion updateAccordionTriggerAriaAttributes initiated\");\n}\n\n// src/block/index.ts\nvar block_exports = {};\n__export(block_exports, {\n  makeBlockAccessible: () => makeBlockAccessible\n});\n\n// src/block/src/makeBlockAccessible/makeBlockAccessible.ts\nfunction makeBlockAccessible(blockId, blockItemsClass) {\n  console.log(\"Block makeBlockAccessible initiated\");\n}\n\n// src/checkbox/index.ts\nvar checkbox_exports = {};\n__export(checkbox_exports, {\n  updateGroupCheckboxesAriaAttributes: () => updateGroupCheckboxesAriaAttributes,\n  updateSingleCheckboxAriaAttributes: () => updateSingleCheckboxAriaAttributes\n});\n\n// src/checkbox/src/single-checkbox/updateSingleCheckboxAriaAttributes/updateSingleCheckboxAriaAttributes.ts\nfunction updateSingleCheckboxAriaAttributes(checkboxClass, updatedAriaLabel) {\n  console.log(\"Checkbox updateSingleCheckboxAriaAttributes initiated\");\n}\n\n// src/checkbox/src/group-checkbox/updateGroupCheckboxesAriaAttributes/updateGroupCheckboxesAriaAttributes.ts\nfunction updateGroupCheckboxesAriaAttributes(checkboxStates, checkboxesClass, currentPressedCheckboxIndex) {\n  console.log(\"Checkbox updateGroupCheckboxesAriaAttributes initiated\");\n}\n\n// src/menu/index.ts\nvar menu_exports = {};\n__export(menu_exports, {\n  cleanUpMenuEventListeners: () => cleanUpMenuEventListeners,\n  makeMenuAccessible: () => makeMenuAccessible,\n  updateMenuTriggerAriaAttributes: () => updateMenuTriggerAriaAttributes\n});\n\n// src/menu/src/cleanUpMenuEventListeners/cleanUpMenuEventListeners.ts\nfunction cleanUpMenuEventListeners(menuId, menuItemsClass) {\n  console.log(\"Menu cleanUpMenuEventListeners initiated\");\n}\n\n// src/menu/src/makeMenuAccessible/makeMenuAccessible.ts\nfunction makeMenuAccessible(menuId, menuItemsClass) {\n  console.log(\"Menu makeMenuAccessible initiated\");\n}\n\n// src/menu/src/updateMenuTriggerAriaAttributes/updateMenuTriggerAriaAttributes.ts\nfunction updateMenuTriggerAriaAttributes(triggerId, ariaLabel) {\n  console.log(\"Menu updateMenuTriggerAriaAttributes initiated\");\n}\n\n// src/radio/index.ts\nvar radio_exports = {};\n__export(radio_exports, {\n  updateGroupRadiosAriaAttributes: () => updateGroupRadiosAriaAttributes,\n  updateSingleRadioAriaAttributes: () => updateSingleRadioAriaAttributes\n});\n\n// src/radio/src/single-radio/updateSingleRadioAriaAttributes.ts\nfunction updateSingleRadioAriaAttributes(radioClass) {\n  console.log(\"Radio updateSingleRadioAriaAttributes initiated\");\n}\n\n// src/radio/src/group-radio/updateGroupRadiosAriaAttributes.ts\nfunction updateGroupRadiosAriaAttributes(radioStates, radiosClass, currentPressedRadioIndex) {\n  console.log(\"Radio updateGroupRadiosAriaAttributes initiated\");\n}\n\n// src/toggle/index.ts\nvar toggle_exports = {};\n__export(toggle_exports, {\n  updateGroupTogglesAriaAttributes: () => updateGroupTogglesAriaAttributes,\n  updateSingleToggleAriaAttributes: () => updateSingleToggleAriaAttributes\n});\n\n// src/toggle/src/single-toggle/updateSingleToggleAriaAttributes.ts\nfunction updateSingleToggleAriaAttributes(toggleClass) {\n  console.log(\"Toggle updateSingleToggleAriaAttributes initiated\");\n}\n\n// src/toggle/src/group-toggle/updateGroupTogglesAriaAttributes.ts\nfunction updateGroupTogglesAriaAttributes(toggleStates, togglesClass, currentPressedToggleIndex) {\n  console.log(\"Toggle updateGroupTogglesAriaAttributes initiated\");\n}\n\nexports.Accordion = accordion_exports;\nexports.Block = block_exports;\nexports.Checkbox = checkbox_exports;\nexports.Menu = menu_exports;\nexports.Radio = radio_exports;\nexports.Toggle = toggle_exports;\n//# sourceMappingURL=index.js.map\n","import { updateAccordionTriggerAriaAttributes } from './src/updateAccordionTriggerAriaAttributes/updateAccordionTriggerAriaAttributes';\n\nexport { updateAccordionTriggerAriaAttributes }","import { makeBlockAccessible } from \"./src/makeBlockAccessible/makeBlockAccessible\";\n\nexport { makeBlockAccessible }","import { updateSingleCheckboxAriaAttributes } from \"./src/single-checkbox/updateSingleCheckboxAriaAttributes/updateSingleCheckboxAriaAttributes\";\nimport { updateGroupCheckboxesAriaAttributes } from \"./src/group-checkbox/updateGroupCheckboxesAriaAttributes/updateGroupCheckboxesAriaAttributes\";\n\nexport { updateSingleCheckboxAriaAttributes, updateGroupCheckboxesAriaAttributes }","/**\n * Adds screen reader accessibility to a single checkbox. Updates the aria attributes of the checkbox. Checkbox element must possess the following aria attributes; aria-checked and aria-label.\n * @param {string} checkboxClass The shared class of all the checkboxes\n * @param {string} updatedAriaLabel The aria label to be updated to checkbox element\n */\n\nimport { HTMLElement } from \"../../../../../Types\";\n\nexport function updateSingleCheckboxAriaAttributes(checkboxClass: string, updatedAriaLabel: string): void {\n    console.log('Checkbox updateSingleCheckboxAriaAttributes initiated');\n}","/**\n * Adds screen reader accessibility to multiple checkboxes. Updates the aria attributes of the checkboxes. Checkbox elements must possess the following aria attributes; aria-checked and aria-label.\n * @param {CheckboxStates[]} checkboxStates Array of objects containing checkboxes state information\n * @param {string} checkboxesClass The shared class of all the checkboxes\n * @param {number} currentPressedCheckboxIndex Index of the currently checked or unchecked checkbox\n */\n\nimport { HTMLElement, CheckboxStates } from \"../../../../../Types\";\n\nexport function updateGroupCheckboxesAriaAttributes(checkboxStates: CheckboxStates[], checkboxesClass: string, currentPressedCheckboxIndex: number): void {\n    console.log('Checkbox updateGroupCheckboxesAriaAttributes initiated');\n}","import { cleanUpMenuEventListeners } from \"./src/cleanUpMenuEventListeners/cleanUpMenuEventListeners\";\nimport { makeMenuAccessible } from \"./src/makeMenuAccessible/makeMenuAccessible\";\nimport { updateMenuTriggerAriaAttributes } from \"./src/updateMenuTriggerAriaAttributes/updateMenuTriggerAriaAttributes\";\n\nexport { cleanUpMenuEventListeners, makeMenuAccessible, updateMenuTriggerAriaAttributes }"]}