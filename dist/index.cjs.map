{"version":3,"sources":["/Users/macx/aria-ease/package/dist/index.cjs","../src/utils/handleKeyPress/handleKeyPress.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\n// src/accordion/src/updateAccordionTriggerAriaAttributes/updateAccordionTriggerAriaAttributes.ts\nfunction updateAccordionTriggerAriaAttributes(accordionId, accordionTriggersClass, accordionStates, clickedTriggerIndex) {\n  const accordionDiv = document.querySelector(`#${accordionId}`);\n  if (!accordionDiv) {\n    throw new Error(\"Invalid accordion main div id provided.\");\n  }\n  const accordionItems = Array.from(accordionDiv.querySelectorAll(`.${accordionTriggersClass}`));\n  if (accordionItems.length === 0) {\n    throw new Error(\"Invalid accordion items shared class provided.\");\n  }\n  if (accordionItems.length !== accordionStates.length) {\n    throw new Error(`Accordion state/DOM length mismatch: found ${accordionItems.length} triggers, but got ${accordionStates.length} state objects.`);\n  }\n  accordionItems.forEach((accordionItem, index) => {\n    const state = accordionStates[index];\n    const expanded = accordionItem.getAttribute(\"aria-expanded\");\n    const shouldBeExpanded = index === clickedTriggerIndex ? state.display ? \"true\" : \"false\" : \"false\";\n    if (expanded && expanded !== shouldBeExpanded) {\n      accordionItem.setAttribute(\"aria-expanded\", shouldBeExpanded);\n    }\n  });\n}\n\n// src/utils/handleKeyPress/handleKeyPress.ts\nfunction isTextInput(el) {\n  if (el.tagName !== \"INPUT\") return false;\n  const type = el.type;\n  return [\"text\", \"email\", \"password\", \"tel\", \"number\"].includes(type);\n}\nfunction isTextArea(el) {\n  return el.tagName === \"TEXTAREA\";\n}\nfunction isNativeButton(el) {\n  return el.tagName === \"BUTTON\" || el.tagName === \"INPUT\" && [\"button\", \"submit\", \"reset\"].includes(el.type);\n}\nfunction isLink(el) {\n  return el.tagName === \"A\";\n}\nfunction moveFocus(elementItems, currentIndex, direction) {\n  const len = elementItems.length;\n  const nextIndex = (currentIndex + direction + len) % len;\n  elementItems.item(nextIndex).focus();\n}\nfunction isClickableButNotSemantic(el) {\n  return el.getAttribute(\"data-custom-click\") !== null || el.getAttribute(\"data-custom-click\") !== void 0;\n}\nfunction handleMenuEscapeKeyPress(menuElement, menuTriggerButton) {\n  menuElement.style.display = \"none\";\n  const menuTriggerButtonId = menuTriggerButton.getAttribute(\"id\");\n  if (!menuTriggerButtonId) {\n    throw new Error(\"Menu trigger button does not have id attribute\");\n  }\n  menuTriggerButton.setAttribute(\"aria-expanded\", \"false\");\n}\nfunction handleKeyPress(event, elementItems, elementItemIndex, menuElementDiv, triggerButton) {\n  const currentEl = elementItems.item(elementItemIndex);\n  switch (event.key) {\n    case \"ArrowUp\":\n    case \"ArrowLeft\": {\n      if (!isTextInput(currentEl) && !isTextArea(currentEl)) {\n        event.preventDefault();\n        moveFocus(elementItems, elementItemIndex, -1);\n      } else if (isTextInput(currentEl) || isTextArea(currentEl)) {\n        const cursorStart = currentEl.selectionStart;\n        if (cursorStart === 0) {\n          event.preventDefault();\n          moveFocus(elementItems, elementItemIndex, -1);\n        }\n      }\n      break;\n    }\n    case \"ArrowDown\":\n    case \"ArrowRight\": {\n      if (!isTextInput(currentEl) && !isTextArea(currentEl)) {\n        event.preventDefault();\n        moveFocus(elementItems, elementItemIndex, 1);\n      } else if (isTextInput(currentEl) || isTextArea(currentEl)) {\n        const value = currentEl.value;\n        const cursorEnd = currentEl.selectionStart;\n        if (cursorEnd === value.length) {\n          event.preventDefault();\n          moveFocus(elementItems, elementItemIndex, 1);\n        }\n      }\n      break;\n    }\n    case \"Escape\": {\n      event.preventDefault();\n      if (menuElementDiv && triggerButton) {\n        if (getComputedStyle(menuElementDiv).display === \"block\") {\n          handleMenuEscapeKeyPress(menuElementDiv, triggerButton);\n        }\n        triggerButton.focus();\n      }\n      break;\n    }\n    case \"Enter\":\n    case \" \": {\n      if (!isNativeButton(currentEl) && !isLink(currentEl) && isClickableButNotSemantic(currentEl)) {\n        event.preventDefault();\n        currentEl.click();\n      }\n      break;\n    }\n  }\n}\n\n// src/block/src/makeBlockAccessible/makeBlockAccessible.ts\nvar eventListenersMap = /* @__PURE__ */ new Map();\nfunction makeBlockAccessible(blockId, blockElementsClass) {\n  const blockDiv = document.querySelector(`#${blockId}`);\n  if (!blockDiv) {\n    throw new Error(\"Invalid block main div id provided.\");\n  }\n  const blockItems = blockDiv.querySelectorAll(`.${blockElementsClass}`);\n  if (!blockItems) {\n    throw new Error(\"Invalid block items shared class provided.\");\n  }\n  blockItems.forEach((blockItem) => {\n    if (!eventListenersMap.has(blockItem)) {\n      blockItem.addEventListener(\"keydown\", (event) => {\n        const items = blockDiv.querySelectorAll(`.${blockElementsClass}`);\n        const index = Array.prototype.indexOf.call(items, blockItem);\n        handleKeyPress(event, items, index);\n        const handler = (event2) => handleKeyPress(event2, items, index);\n        eventListenersMap.set(blockItem, handler);\n      });\n    }\n  });\n  return function cleanUpBlockEventListeners() {\n    blockItems.forEach((blockItem, blockItemIndex) => {\n      if (eventListenersMap.has(blockItem)) {\n        blockItem.removeEventListener(\"keydown\", (event) => handleKeyPress(event, blockItems, blockItemIndex));\n        eventListenersMap.delete(blockItem);\n      }\n    });\n  };\n}\n\n// src/checkbox/src/updateCheckboxAriaAttributes/updateCheckboxAriaAttributes.ts\nfunction updateCheckboxAriaAttributes(checkboxId, checkboxesClass, checkboxStates, currentPressedCheckboxIndex) {\n  const checkboxDiv = document.querySelector(`#${checkboxId}`);\n  if (!checkboxDiv) {\n    throw new Error(\"Invalid checkbox main div id provided.\");\n  }\n  const checkboxItems = Array.from(document.querySelectorAll(`.${checkboxesClass}`));\n  if (checkboxItems.length === 0) {\n    throw new Error(\"Invalid checkboxes shared class provided.\");\n  }\n  checkboxItems.forEach((checkbox, index) => {\n    if (index === currentPressedCheckboxIndex) {\n      checkbox.setAttribute(\"aria-checked\", checkboxStates[index].checked ? \"true\" : \"false\");\n    }\n  });\n}\n\n// src/menu/src/makeMenuAccessible/makeMenuAccessible.ts\nfunction makeMenuAccessible({ menuId, menuElementsClass, triggerId }) {\n  const menuDiv = document.querySelector(`#${menuId}`);\n  if (!menuDiv) throw new Error(\"Invalid menu div id provided\");\n  const triggerButton = document.querySelector(`#${triggerId}`);\n  if (!triggerButton) throw new Error(\"Invalid trigger button id provided\");\n  const handlerMap = /* @__PURE__ */ new Map();\n  function setAria(isOpen) {\n    triggerButton.setAttribute(\"aria-expanded\", isOpen ? \"true\" : \"false\");\n  }\n  function addListeners() {\n    const menuItems = menuDiv.querySelectorAll(`.${menuElementsClass}`);\n    menuItems.forEach((menuItem, index) => {\n      if (!handlerMap.has(menuItem)) {\n        const handler = (event) => handleKeyPress(event, menuItems, index, menuDiv, triggerButton);\n        menuItem.addEventListener(\"keydown\", handler);\n        handlerMap.set(menuItem, handler);\n      }\n    });\n  }\n  function removeListeners() {\n    const menuItems = menuDiv.querySelectorAll(`.${menuElementsClass}`);\n    menuItems.forEach((menuItem) => {\n      const handler = handlerMap.get(menuItem);\n      if (handler) {\n        menuItem.removeEventListener(\"keydown\", handler);\n        handlerMap.delete(menuItem);\n      }\n    });\n  }\n  function openMenu() {\n    menuDiv.style.display = \"block\";\n    setAria(true);\n    addListeners();\n    const menuItems = menuDiv.querySelectorAll(`.${menuElementsClass}`);\n    if (menuItems.length > 0) menuItems[0].focus();\n  }\n  function closeMenu() {\n    removeListeners();\n    menuDiv.style.display = \"none\";\n    setAria(false);\n    triggerButton.focus();\n  }\n  function cleanup() {\n    removeListeners();\n  }\n  return { openMenu, closeMenu, cleanup };\n}\n\n// src/radio/src/updateRadioAriaAttributes/updateRadioAriaAttributes.ts\nfunction updateRadioAriaAttributes(radioId, radiosClass, radioStates, currentPressedRadioIndex) {\n  const radioDiv = document.querySelector(`#${radioId}`);\n  if (!radioDiv) {\n    throw new Error(\"Invalid radio main div id provided.\");\n  }\n  const radioItems = Array.from(radioDiv.querySelectorAll(`.${radiosClass}`));\n  if (radioItems.length === 0) {\n    throw new Error(\"Invalid radios shared class provided.\");\n  }\n  radioItems.forEach((radioItem, index) => {\n    const state = radioStates[index];\n    const checked = radioItem.getAttribute(\"aria-checked\");\n    const shouldBeChecked = index === currentPressedRadioIndex ? state.checked ? \"true\" : \"false\" : \"false\";\n    if (checked && checked !== shouldBeChecked) {\n      radioItem.setAttribute(\"aria-checked\", shouldBeChecked);\n    }\n  });\n}\n\n// src/toggle/src/updateToggleAriaAttribute/updateToggleAriaAttribute.ts\nfunction updateToggleAriaAttribute(toggleId, togglesClass, toggleStates, currentPressedToggleIndex) {\n  const toggleDiv = document.querySelector(`#${toggleId}`);\n  if (!toggleDiv) {\n    throw new Error(\"Invalid toggle main div id provided.\");\n  }\n  const toggleItems = Array.from(toggleDiv.querySelectorAll(`.${togglesClass}`));\n  if (toggleItems.length === 0) {\n    throw new Error(\"Invalid toggles shared class provided.\");\n  }\n  if (toggleItems.length !== toggleStates.length) {\n    throw new Error(`Toggle state/DOM length mismatch: found ${toggleItems.length} triggers, but got ${toggleStates.length} state objects.`);\n  }\n  toggleItems.forEach((toggle, index) => {\n    if (index === currentPressedToggleIndex) {\n      toggle.setAttribute(\"aria-pressed\", toggleStates[index].pressed ? \"true\" : \"false\");\n    }\n  });\n}\n\nexports.makeBlockAccessible = makeBlockAccessible;\nexports.makeMenuAccessible = makeMenuAccessible;\nexports.updateAccordionTriggerAriaAttributes = updateAccordionTriggerAriaAttributes;\nexports.updateCheckboxAriaAttributes = updateCheckboxAriaAttributes;\nexports.updateRadioAriaAttributes = updateRadioAriaAttributes;\nexports.updateToggleAriaAttribute = updateToggleAriaAttribute;\n//# sourceMappingURL=index.cjs.map\n","import { NodeListOfHTMLElement, HTMLElement } from \"../../../Types\";\n\n\nfunction isTextInput(el: HTMLElement): boolean {\n    if (el.tagName !== 'INPUT') return false;\n    const type = (el as HTMLInputElement).type;\n    return ['text', 'email', 'password', 'tel', 'number'].includes(type);\n}\n\nfunction isTextArea(el: HTMLElement): boolean {\n    return el.tagName === 'TEXTAREA';\n}\n\nexport function isNativeButton(el: HTMLElement): boolean {\n    return el.tagName === 'BUTTON' || (el.tagName === 'INPUT' && ['button', 'submit', 'reset'].includes((el as HTMLInputElement).type));\n}\n\nexport function isLink(el: HTMLElement): boolean {\n    return el.tagName === 'A';\n}\n\nfunction moveFocus(elementItems: NodeListOfHTMLElement, currentIndex: number, direction: -1 | 1) {\n    const len = elementItems.length;\n    const nextIndex = (currentIndex + direction + len) % len;\n    elementItems.item(nextIndex).focus();\n}\n\nfunction isClickableButNotSemantic(el: HTMLElement): boolean {\n    return el.getAttribute(\"data-custom-click\") !== null || el.getAttribute(\"data-custom-click\") !== undefined;\n}\n\nfunction handleMenuEscapeKeyPress(menuElement: HTMLElement, menuTriggerButton: HTMLElement) {\n    menuElement.style.display = 'none';\n    const menuTriggerButtonId = menuTriggerButton.getAttribute('id');\n    if (!menuTriggerButtonId) {\n        throw new Error(\"Menu trigger button does not have id attribute\");\n    }\n    menuTriggerButton.setAttribute(\"aria-expanded\", \"false\");\n}\n\nexport function handleKeyPress(\n    event: KeyboardEvent,\n    elementItems: NodeListOfHTMLElement,\n    elementItemIndex: number,\n    menuElementDiv?: HTMLElement,\n    triggerButton?: HTMLElement\n): void {\n    const currentEl = elementItems.item(elementItemIndex);\n    switch (event.key) {\n        case 'ArrowUp':\n        case 'ArrowLeft': {\n            if (!isTextInput(currentEl) && !isTextArea(currentEl)) {\n                event.preventDefault();\n                moveFocus(elementItems, elementItemIndex, -1);\n            } else if (isTextInput(currentEl) || isTextArea(currentEl)) {\n                const cursorStart = (currentEl as HTMLInputElement | HTMLTextAreaElement).selectionStart;\n                if (cursorStart === 0) {\n                    event.preventDefault();\n                    moveFocus(elementItems, elementItemIndex, -1);\n                }\n            }\n            break;\n        }\n        case 'ArrowDown':\n        case 'ArrowRight': {\n            if (!isTextInput(currentEl) && !isTextArea(currentEl)) {\n                event.preventDefault();\n                moveFocus(elementItems, elementItemIndex, 1);\n            } else if (isTextInput(currentEl) || isTextArea(currentEl)) {\n                const value = (currentEl as HTMLInputElement | HTMLTextAreaElement).value;\n                const cursorEnd = (currentEl as HTMLInputElement | HTMLTextAreaElement).selectionStart;\n                if (cursorEnd === value.length) {\n                    event.preventDefault();\n                    moveFocus(elementItems, elementItemIndex, 1);\n                }\n            }\n            break;\n        }\n        case 'Escape': {\n            event.preventDefault();\n            if (menuElementDiv && triggerButton) {\n                if (getComputedStyle(menuElementDiv).display === 'block') {\n                    handleMenuEscapeKeyPress(menuElementDiv, triggerButton);\n                }\n                triggerButton.focus();\n            }\n            break;\n        }\n        case 'Enter':\n        case ' ': {\n            if (!isNativeButton(currentEl) && !isLink(currentEl) && isClickableButNotSemantic(currentEl)) {\n                event.preventDefault();\n                currentEl.click();\n            }\n            break;\n        }\n        default:\n            break;\n    }\n}"]}