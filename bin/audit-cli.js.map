{"version":3,"sources":["/Users/macx/aria-ease/package/bin/audit-cli.js","../dist/src/utils/audit/audit.js"],"names":[],"mappings":"","sourcesContent":["#!/usr/bin/env node\n\n// dist/src/utils/audit/audit.js\nimport AxeBuilder from \"@axe-core/playwright\";\nimport { chromium } from \"playwright\";\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _async_to_generator(fn) {\n  return function() {\n    var self = this, args2 = arguments;\n    return new Promise(function(resolve, reject) {\n      var gen = fn.apply(self, args2);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(void 0);\n    });\n  };\n}\nfunction _ts_generator(thisArg, body) {\n  var f, y, t, _ = {\n    label: 0,\n    sent: function() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  }, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n    return this;\n  }), g;\n  function verb(n) {\n    return function(v) {\n      return step([\n        n,\n        v\n      ]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [\n        op[0] & 2,\n        t.value\n      ];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [\n            0\n          ];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [\n        6,\n        e\n      ];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\nfunction runAudit() {\n  return _async_to_generator(function() {\n    var browser, context, page, axe, axeResults, snapshot, error;\n    return _ts_generator(this, function(_state) {\n      switch (_state.label) {\n        case 0:\n          return [\n            4,\n            chromium.launch({\n              headless: true\n            })\n          ];\n        case 1:\n          browser = _state.sent();\n          return [\n            4,\n            browser.newContext()\n          ];\n        case 2:\n          context = _state.sent();\n          return [\n            4,\n            context.newPage()\n          ];\n        case 3:\n          page = _state.sent();\n          return [\n            4,\n            page.goto(\"http://localhost:5173/\")\n          ];\n        case 4:\n          _state.sent();\n          _state.label = 5;\n        case 5:\n          _state.trys.push([\n            5,\n            8,\n            ,\n            9\n          ]);\n          axe = new AxeBuilder({\n            page\n          });\n          return [\n            4,\n            axe.analyze()\n          ];\n        case 6:\n          axeResults = _state.sent();\n          console.log(\"--- AXE-CORE RESULTS ---\");\n          console.log(axeResults);\n          return [\n            4,\n            page.accessibility.snapshot()\n          ];\n        case 7:\n          snapshot = _state.sent();\n          console.log(\"\\n--- PLAYWRIGHT SNAPSHOT ---\");\n          console.log(snapshot);\n          return [\n            3,\n            9\n          ];\n        case 8:\n          error = _state.sent();\n          console.log(error);\n          return [\n            3,\n            9\n          ];\n        case 9:\n          return [\n            4,\n            browser.close()\n          ];\n        case 10:\n          _state.sent();\n          return [\n            2\n          ];\n      }\n    });\n  })();\n}\n\n// bin/audit-cli.ts\nvar args = process.argv.slice(2);\nif (args[0] === \"audit\") {\n  (async () => {\n    await runAudit();\n  })();\n} else {\n  console.log(\"Usage: npx aria-ease audit\");\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _async_to_generator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n        return !!right[Symbol.hasInstance](left);\n    } else {\n        return left instanceof right;\n    }\n}\nfunction _ts_generator(thisArg, body) {\n    var f, y, t, _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nimport AxeBuilder from '@axe-core/playwright';\nimport { chromium } from 'playwright';\n// src/utils/audit/audit.ts\nfunction runAudit(url) {\n    return _async_to_generator(function() {\n        var browser, context, page, axe, axeResults, error;\n        return _ts_generator(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    _state.trys.push([\n                        0,\n                        6,\n                        ,\n                        7\n                    ]);\n                    return [\n                        4,\n                        chromium.launch({\n                            headless: true\n                        })\n                    ];\n                case 1:\n                    browser = _state.sent();\n                    return [\n                        4,\n                        browser.newContext()\n                    ];\n                case 2:\n                    context = _state.sent();\n                    return [\n                        4,\n                        context.newPage()\n                    ];\n                case 3:\n                    page = _state.sent();\n                    return [\n                        4,\n                        page.goto(url, {\n                            waitUntil: \"networkidle\"\n                        })\n                    ];\n                case 4:\n                    _state.sent();\n                    axe = new AxeBuilder({\n                        page: page\n                    });\n                    return [\n                        4,\n                        axe.analyze()\n                    ];\n                case 5:\n                    axeResults = _state.sent();\n                    return [\n                        2,\n                        axeResults\n                    ];\n                case 6:\n                    error = _state.sent();\n                    if (_instanceof(error, Error) && error.message.includes(\"Executable doesn't exist\")) {\n                        console.error(\"\\n\\u274C Playwright browsers not found!\\n\");\n                        console.log(\"\\uD83D\\uDCE6 First-time setup required:\");\n                        console.log(\"   Run: npx playwright install chromium\\n\");\n                        console.log(\"\\uD83D\\uDCA1 This downloads the browser needed for auditing (~200MB)\");\n                        console.log(\"   You only need to do this once.\\n\");\n                        process.exit(1);\n                    }\n                    return [\n                        3,\n                        7\n                    ];\n                case 7:\n                    if (!browser) return [\n                        3,\n                        9\n                    ];\n                    return [\n                        4,\n                        browser.close()\n                    ];\n                case 8:\n                    _state.sent();\n                    _state.label = 9;\n                case 9:\n                    return [\n                        2\n                    ];\n            }\n        });\n    })();\n}\nexport { runAudit }; //# sourceMappingURL=audit.js.map\n//# sourceMappingURL=audit.js.map"]}